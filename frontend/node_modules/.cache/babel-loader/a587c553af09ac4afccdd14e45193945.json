{"ast":null,"code":"var _jsxFileName = \"/home/jlramos/Documents/ReactTS/my-app-ts/src/components/TodoList.tsx\";\nimport React, { Fragment } from 'react';\nexport default function TodoList(todos) {\n  const complete = index => {\n    todos[index].complete = !todos[index].complete;\n    setTodos([...todos]);\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, todos.map((todo, index) => React.createElement(Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, todo.text, \" \", ' ', todos[index].complete ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => complete(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"TODO\") : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => complete(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Complete\")))));\n}","map":{"version":3,"sources":["/home/jlramos/Documents/ReactTS/my-app-ts/src/components/TodoList.tsx"],"names":["React","Fragment","TodoList","todos","complete","index","setTodos","map","todo","text"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAsD,OAAtD;AAOA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyC;AAEpD,QAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACtCF,IAAAA,KAAK,CAACE,KAAD,CAAL,CAAaD,QAAb,GAAwB,CAACD,KAAK,CAACE,KAAD,CAAL,CAAaD,QAAtC;AACAE,IAAAA,QAAQ,CAAC,CAAC,GAAGH,KAAJ,CAAD,CAAR;AACD,GAHH;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAcH,KAAd,KACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,CAACC,IADR,OACe,GADf,EAIMN,KAAK,CAACE,KAAD,CAAL,CAAaD,QAAb,GAEA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAACC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,GAMA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVN,CADF,CADD,CADD,CADJ;AAsBH","sourcesContent":["import React , { Fragment, useState, useEffect } from 'react';\n\ninterface ITodo {\n    text: string\n    complete: boolean\n  }\n\nexport default function TodoList(todos:any): JSX.Element{\n\n    const complete = (index: number): void => {\n        todos[index].complete = !todos[index].complete\n        setTodos([...todos])\n      }\n\n    return (\n        <section>\n        {todos.map((todo: ITodo, index: number) => (\n          <Fragment key={index}>\n            <div>\n              {todo.text} {' '}\n\n                {\n                  todos[index].complete ? \n                \n                  <button type='button' onClick={() => complete(index)}>TODO</button>\n  \n                  : \n  \n                  <button type='button' onClick={() => complete(index)}>Complete</button>\n                }\n            </div>     \n          </Fragment>\n        ))}\n      </section>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}