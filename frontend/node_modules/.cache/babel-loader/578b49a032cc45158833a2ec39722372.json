{"ast":null,"code":"var _jsxFileName = \"/home/jlramos/Documents/ReactTS/my-app-ts/src/components/TodoList.tsx\";\nimport React, { Fragment } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nexport default function TodoList(props) {\n  const complete = index => {\n    props.todos[index].complete = !props.todos[index].complete;\n    props.setTodos([...props.todos]);\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.todos.map((todo, index) => React.createElement(Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, todo.text, \" \", ' ', props.todos[index].complete ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => complete(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"TODO\") : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => complete(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Complete\")))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Word of the Day\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"adjective\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"well meaning and kindly.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), '\"a benevolent smile\"')), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Learn More\"))));\n}","map":{"version":3,"sources":["/home/jlramos/Documents/ReactTS/my-app-ts/src/components/TodoList.tsx"],"names":["React","Fragment","Card","CardActions","CardContent","Button","Typography","TodoList","props","complete","index","todos","setTodos","map","todo","text"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAOA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAErD,QAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACtCF,IAAAA,KAAK,CAACG,KAAN,CAAYD,KAAZ,EAAmBD,QAAnB,GAA8B,CAACD,KAAK,CAACG,KAAN,CAAYD,KAAZ,EAAmBD,QAAlD;AACAD,IAAAA,KAAK,CAACI,QAAN,CAAe,CAAC,GAAGJ,KAAK,CAACG,KAAV,CAAf;AACD,GAHH;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACG,KAAN,CAAYE,GAAZ,CAAgB,CAACC,IAAD,EAAcJ,KAAd,KACf,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACC,IADR,OACe,GADf,EAIMP,KAAK,CAACG,KAAN,CAAYD,KAAZ,EAAmBD,QAAnB,GAEA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAACC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,GAMA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVN,CADF,CADD,CADD,EAmBA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAkC,IAAA,YAAY,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,EAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGC,sBAHD,CAVJ,CADA,EAiBA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAjBA,CAnBA,CADJ;AA+CH","sourcesContent":["import React , { Fragment} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\ninterface ITodo {\n    text: string\n    complete: boolean\n  }\n\nexport default function TodoList(props: any): JSX.Element{\n\n    const complete = (index: number): void => {\n        props.todos[index].complete = !props.todos[index].complete\n        props.setTodos([...props.todos])\n      }\n\n    return (\n        <section>\n        {props.todos.map((todo: ITodo, index: number) => (\n          <Fragment key={index}>\n            <div>\n              {todo.text} {' '}\n\n                {\n                  props.todos[index].complete ? \n                \n                  <button type='button' onClick={() => complete(index)}>TODO</button>\n  \n                  : \n  \n                  <button type='button' onClick={() => complete(index)}>Complete</button>\n                }\n            </div>     \n          </Fragment>\n        ))}\n\n        <Card>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            Word of the Day\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n            \n            </Typography>\n            <Typography color=\"textSecondary\">\n            adjective\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n            well meaning and kindly.\n            <br />\n            {'\"a benevolent smile\"'}\n            </Typography>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\">Learn More</Button>\n        </CardActions>\n        </Card>\n\n\n\n      </section>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}