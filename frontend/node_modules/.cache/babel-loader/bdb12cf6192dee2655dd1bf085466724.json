{"ast":null,"code":"import _slicedToArray from \"/home/jlramos/Documents/ReactTS/my-app-ts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jlramos/Documents/ReactTS/my-app-ts/src/App.tsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { Typography, Grid, TextField, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TodoList from './components/TodoList';\nexport default function App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  useEffect(() => {});\n\n  const handleSubmit = () => {\n    if (value !== '') {\n      addTodo(value);\n      setValue('');\n    }\n  };\n\n  const addTodo = text => {\n    setTodos([...todos, {\n      text: text,\n      complete: false\n    }]);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    style: {\n      marginLeft: '-15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Todo List\"))), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"A\\xF1ade un producto\",\n    variant: \"outlined\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))), React.createElement(TodoList, {\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/jlramos/Documents/ReactTS/my-app-ts/src/App.tsx"],"names":["React","Fragment","useState","useEffect","Typography","Grid","TextField","Fab","AddIcon","TodoList","App","value","setValue","todos","setTodos","handleSubmit","addTodo","text","complete","textAlign","marginLeft","e","target"],"mappings":"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","sourcesContent":["import React , { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { Typography, Grid, TextField, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TodoList from './components/TodoList'\n\ninterface ITodo {\n  text: string\n  complete: boolean\n}\n\nexport default function App(): JSX.Element{\n  type FormElem = React.FormEvent<HTMLFormElement>;\n\n  const [value, setValue] = useState('');\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  \n  useEffect(() => {\n  });\n\n  const handleSubmit = () => {\n    if (value !== '') {\n      addTodo(value);\n      setValue('');  \n    }\n  }\n\n  const addTodo = (text:string) => {\n    setTodos([...todos, {text: text, complete: false}])\n  }\n\n\n  return (\n    <Fragment>\n      <Grid container spacing={6}>\n        <Grid item xs={12} style={{textAlign: 'center'}}>\n          <Typography variant=\"h3\" style={{marginLeft: '-15px'}}>Todo List</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} style={{}}>\n        <Grid item xs={9} style={{textAlign: 'center'}}>\n          <TextField id=\"outlined-basic\" label=\"AÃ±ade un producto\" variant=\"outlined\" value={value} onChange={e => setValue(e.target.value)}/>  \n        </Grid>\n        <Grid item xs={3}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleSubmit}>\n            <AddIcon />\n          </Fab>\n\n        </Grid>\n      </Grid>\n\n      <TodoList todos={todos}/>\n\n    </Fragment>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}