{"version":3,"sources":["Store.tsx","components/TodoList.tsx","index.tsx","App.tsx"],"names":["initialState","articles","text","complete","Store","React","createContext","reducer","state","action","type","payload","TodoList","props","useContext","dispatch","Grid","container","spacing","style","marginTop","item","xs","Card","variant","width","CardContent","todos","map","todo","index","key","Typography","color","gutterBottom","textDecoration","onClick","length","IconButton","aria-label","delete","ReactDOM","render","useReducer","Provider","value","children","useState","setValue","setTodos","useEffect","array","JSON","parse","localStorage","getItem","fetchDataAction","setItem","stringify","handleSubmit","addTodo","a","async","fetch","data","json","dataJSON","console","log","_embedded","episodes","textAlign","TextField","id","label","onChange","e","target","onKeyPress","event","Fab","splice","document","getElementById"],"mappings":"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","file":"static/js/main.a73d6733.chunk.js","sourcesContent":["import React from 'react';\n\ninterface IState {\n    articles: [{  text: string, complete: boolean}]\n}\n\ninterface IAction {\n    type: string,\n    payload: any\n}\n\nconst initialState:IState = {\n    articles: [{text: '', complete: false}]\n}\n\nexport const Store = React.createContext<IState | any>(initialState)\n\nfunction reducer(state:IState, action:IAction): IState {\n    switch(action.type) {\n        case 'FETCH':\n            return {...state, articles: action.payload}\n        default:\n            return state\n    }\n}\n\nexport function StoreProvider(props:any):JSX.Element {\n    const [state, dispatch] = React.useReducer(reducer, initialState)\n    return <Store.Provider value={{state, dispatch}}>{props.children}</Store.Provider>\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Store} from '../Store'\n\ninterface ITodo {\n    text: string\n    complete: boolean\n}\n  \nexport default function TodoList(props: any): JSX.Element{\n\n    const {state, dispatch} = React.useContext(Store)\n\n    return (\n        <Grid container spacing={1} style={{ marginTop: '15px' }}>\n            <Grid item xs={12} >\n                <Card variant=\"outlined\" style={{    width: '95%'}}>\n                    <CardContent>\n                        {props.todos.map((todo: ITodo, index: number) => (\n                            <Grid container key={index}>\n                                <Grid item xs={10} >\n                                    <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom style={{ textDecoration: todo.complete ? 'line-through' : ''\n                                    , color: todo.complete ? 'grey': 'black' }} onClick={() => props.complete(index)}>\n                                        {todo.text}\n                                    </Typography>\n                                </Grid>\n                                \n                                <Grid item xs={2}>\n                                    {\n                                    (index + 1) === props.todos.length ?\n                                        <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => props.delete(index)}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                        :  '' \n                                    }\n                                </Grid>\n                            </Grid>\n                        ))}\n                    </CardContent>\n                </Card>\n            </Grid>\n      </Grid>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {StoreProvider} from './Store'\n\nReactDOM.render(\n    <StoreProvider>\n        <App />\n    </StoreProvider>\n, document.getElementById('root'));","import React , { Fragment, useState, useEffect, KeyboardEvent, useContext } from 'react';\nimport './App.css';\nimport { Grid, TextField, Fab } from '@material-ui/core';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport TodoList from './components/TodoList'\nimport {Store} from './Store'\n\n\ninterface ITodo {\n  text: string\n  complete: boolean\n}\n\nexport default function App(): JSX.Element{\n\n  const {state, dispatch} = React.useContext(Store)\n\n  const [value, setValue] = useState('');\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  \n  useEffect(() => {\n\n    var array = JSON.parse(localStorage.getItem(\"todos\")!);\n    if (array === null) {\n      setTodos([])\n    } else {\n      setTodos(array)\n    }\n\n    fetchDataAction()\n\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify([...todos]))\n  });\n\n  const handleSubmit = () => {\n    if (value !== '') {\n      addTodo(value);\n      setValue('');  \n    }\n  }\n\n  const handleKeyPress = (event: KeyboardEvent<HTMLDivElement>) => {\n    if(event.key === 'Enter'){\n      handleSubmit();\n    }\n  }\n\n  const addTodo = (text:string) => {\n    setTodos([...todos, {text: text, complete: false}])\n    localStorage.setItem('todos', JSON.stringify([...todos]))\n  }\n\n  const complete = (index: number): void => {\n    todos[index].complete = !todos[index].complete\n    setTodos([...todos])\n    localStorage.setItem('todos', JSON.stringify([...todos]))\n  }\n\n  const remove = (index: number): void => {\n    todos.splice(index, 1);\n    setTodos([...todos])\n    localStorage.setItem('todos', JSON.stringify([...todos]))\n  }\n\n  const fetchDataAction = async() => {\n    const data = await fetch('https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes')\n    const dataJSON = await data.json();\n\n    console.log('done')\n\n    return dispatch({\n      type: 'FETCH',\n      payload: dataJSON._embedded.episodes\n    })\n  }\n\n\n  return (\n    <Fragment>\n      {console.log(state)}\n      <Grid container spacing={6}>\n        <Grid item xs={12} style={{textAlign: 'center'}}>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} style={{ marginTop: '60px' }}>\n        <Grid item xs={8} style={{textAlign: 'center'}}>\n          <TextField id=\"outlined-basic\" label=\"AÃ±ade un producto\" variant=\"outlined\" value={value} onChange={e => setValue(e.target.value)} onKeyPress={handleKeyPress}/>  \n        </Grid>\n        <Grid item xs={4}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleSubmit}>\n            <AddShoppingCartIcon />\n          </Fab>\n\n        </Grid>\n      </Grid>\n\n      <TodoList todos={todos} complete={complete} delete={remove}/>\n\n    </Fragment>\n\n  );\n}\n"],"sourceRoot":""}